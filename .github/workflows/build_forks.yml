name: CI from forks

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  ACS_DEPLOYMENT_VERSION: 78132d95e29d7126025e127740d10cf958164947 # 8.6.0-alpha.0 with compose healthcheck
  ARTIFACT_NAME: alfresco-docker-images
  REGISTRY: localhost
  REGISTRY_NAMESPACE: alfresco
  TAG: latest

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name || github.run_id }}
  cancel-in-progress: true

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.fork || github.actor == 'dependabot[bot]'
    steps:
      - uses: Alfresco/alfresco-build-tools/.github/actions/pre-commit@v8.12.1

  build:
    needs: pre-commit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: Alfresco/alfresco-build-tools/.github/actions/free-hosted-runner-disk-space@v8.12.1

      - name: Restore packages artifacts
        uses: actions/cache/restore@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        id: artifacts-cache
        with:
          key: ${{ runner.os }}-packages-community-v2-${{ hashFiles('**/artifacts-23.yaml') }}
          path: artifacts_cache/**

      - name: Fetch artifacts from nexus
        run: |
          python3 ./scripts/fetch_artifacts.py

      - name: Save packages artifacts
        if: steps.artifacts-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          key: ${{ steps.artifacts-cache.outputs.cache-primary-key }}
          path: artifacts_cache/**

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0

      - name: Bake Docker images
        env:
          TARGETARCH: linux/amd64
          DOCKER_PUSH: ${{ github.actor != 'dependabot[bot]'}}
        uses: docker/bake-action@7bff531c65a5cda33e52e43950a795b91d450f63  # v6.3.0
        with:
          targets: community

      - name: Export all baked images whose name include `alfresco`
        run: |
          docker save -o /tmp/${{ env.ARTIFACT_NAME }}.tar $(docker images --format "{{.Repository}}:{{.Tag}}" | grep alfresco)

      - name: Upload images as artifact
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: /tmp/${{ env.ARTIFACT_NAME }}.tar
          retention-days: 1
          compression-level: 0

  compose-test:
    name: compose-test
    needs: build
    runs-on: ubuntu-latest
    env:
      MERGED_COMPOSE_PATH: test/merged-compose.yaml
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Download artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          path: /tmp
          name: ${{ env.ARTIFACT_NAME }}

      - name: Load docker images from artifact
        run: |
          docker load -i /tmp/${{ env.ARTIFACT_NAME }}.tar
          docker image ls -a

      - name: Fetch compose from acs-deployment
        run: ./scripts/fetch-compose.sh ${{ env.ACS_DEPLOYMENT_VERSION }}

      - name: Merge Docker Compose files
        env:
          UPSTREAM_COMPOSE_PATH: test/community-compose.yaml
          OVERRIDE_COMPOSE_PATH: test/community-override.yaml
        run: docker compose -f ${{ env.UPSTREAM_COMPOSE_PATH }} -f ${{ env.OVERRIDE_COMPOSE_PATH }} config > ${{ env.MERGED_COMPOSE_PATH }}

      - name: Verify docker-compose
        id: verify_compose
        uses: Alfresco/alfresco-build-tools/.github/actions/dbp-charts/verify-compose@v8.12.1
        timeout-minutes: 10
        with:
          postman_path: test/postman/docker-compose
          postman_json: acs-test-docker-compose-collection.json
          compose_pull: false
          compose_file_path: ${{ env.MERGED_COMPOSE_PATH }}

      - name: Save containers logs
        if: always() && steps.verify_compose.outcome != 'skipped'
        uses: Alfresco/alfresco-build-tools/.github/actions/docker-dump-containers-logs@v8.12.1
        with:
          output-archive-name: community-logs

  helm-test:
    name: helm test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Download artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          path: /tmp
          name: ${{ env.ARTIFACT_NAME }}

      - name: Setup KinD cluster
        uses: Alfresco/alfresco-build-tools/.github/actions/setup-kind@v8.12.1
        with:
          ingress-nginx-ref: controller-v1.8.2
          metrics: "true"

      - name: Load Docker images
        run: |
          kind load image-archive -n chart-testing /tmp/${{ env.ARTIFACT_NAME }}.tar

      - uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0
        with:
          version: "3.15.2"

      - name: Create configmaps for adf apps
        run: |
          kubectl create configmap acc-config --from-file=app.config.json=test/configs/acc.json
          kubectl create configmap adw-config --from-file=app.config.json=test/configs/adw.json

      - name: Checkout acs-deployment sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: Alfresco/acs-deployment
          ref: ${{ env.ACS_DEPLOYMENT_VERSION }}
          path: acs-deployment

      - name: Setup helm repository
        working-directory: acs-deployment/helm/alfresco-content-services
        run: |
          helm repo add self https://alfresco.github.io/alfresco-helm-charts/
          helm repo add activiti https://activiti.github.io/activiti-cloud-helm-charts
          helm repo add bitnami https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami/
          helm repo add elastic https://helm.elastic.co
          helm dependency build

      - name: Helm install
        id: helm_install
        run: |
          helm install acs ./acs-deployment/helm/alfresco-content-services \
            --set global.search.sharedSecret="$(openssl rand -hex 24)" \
            --set global.known_urls=http://localhost \
            --set alfresco-repository.image.repository=localhost/alfresco/alfresco-content-repository-community \
            --set share.image.repository=localhost/alfresco/alfresco-share-community \
            --values ./acs-deployment/helm/alfresco-content-services/community_values.yaml \
            --values ./acs-deployment/test/community-integration-test-values.yaml \
            --values test/helm/test-overrides.yaml \
            --values test/helm/test-overrides-community.yaml

      - name: Watch Helm deployment
        env:
          HELM_INSTALL_TIMEOUT: 10m
        run: |
          kubectl get pods --watch &
          KWPID=$!
          kubectl wait --timeout=${{ env.HELM_INSTALL_TIMEOUT }} --all=true --for=condition=Ready pods
          kill $KWPID

      - name: Debug cluster status after install
        if: always() && steps.helm_install.outcome != 'skipped'
        run: |
          helm ls --all-namespaces --all
          kubectl get all --all-namespaces
          kubectl describe pod

      - name: Run helm test
        id: helm_test
        run: helm test acs

      - name: Debug cluster status after helm test
        if: always() && steps.helm_test.outcome != 'skipped'
        run: |
          kubectl logs -l app.kubernetes.io/component=dtas --tail=-1
          kubectl get all --all-namespaces
          kubectl describe pod

      - name: Collect logs from all containers
        if: always() && steps.helm_install.outcome != 'skipped'
        run: |
          mkdir -p logs
          for pod in $(kubectl get pods -n default -o jsonpath='{.items[*].metadata.name}'); do
            kubectl logs $pod -n default > logs/${pod}.log
          done

      - name: Upload logs as artifact
        if: always() && steps.helm_install.outcome != 'skipped'
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 #v4.6.0
        with:
          name: k8s-logs-community
          path: logs
