name: CI

on:
  workflow_call:
    inputs:
      aps_version:
        description: 'Version of APS to build'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  REGISTRY_NAMESPACE: alfresco

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      helm_matrix_json: ${{ steps.set-matrix.outputs.helm_matrix_json }}
    steps:
      - name: Set matrix values for Compose and Helm
        id: set-matrix
        run: |
          case "${{ inputs.aps_version }}" in
            25)
              echo 'helm_matrix_json={"arch": ["amd64"], "edition": ["25"]}' >> $GITHUB_OUTPUT
              ;;
            24)
              echo 'helm_matrix_json={"arch": ["amd64"], "edition": ["24"]}' >> $GITHUB_OUTPUT
              ;;
          esac

  aps-helm-test:
    needs: build-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build-matrix.outputs.helm_matrix_json) }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Prepare for helm installation
        uses: ./.github/actions/helm-prepare
        with:
          docker-username: ${{ secrets.DOCKER_USERNAME }}
          docker-password: ${{ secrets.DOCKER_PASSWORD }}
          quay-username: ${{ secrets.QUAY_USERNAME }}
          quay-password: ${{ secrets.QUAY_PASSWORD }}
          github-registry: ${{ env.REGISTRY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-actor: ${{ github.actor }}
          k8s-registry-secret-name: quay-registry-secret

      - name: Create license secret
        run: |
          kubectl create secret generic \
            --from-literal=activiti.lic="${{ secrets.APS_LICENSE }}" aps-license

      - name: Checkout aps-deployment sources
        uses: ./.github/actions/aps-deployment
        with:
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Setup helm repository
        working-directory: aps-deployment/helm/alfresco-process-services
        run: |
          helm repo add self https://alfresco.github.io/alfresco-helm-charts/
          helm repo add bitnami https://raw.githubusercontent.com/bitnami/charts/archive-full-index/bitnami/
          helm repo add elastic https://helm.elastic.co
          helm dependency build

      - name: Helm install
        id: helm_install
        run: |
          helm install aps ./aps-deployment/helm/alfresco-process-services \
            --set alfresco-activiti.license.secretName=aps-license \
            --values ./aps-deployment/tests/ci-values.yaml \
            --values test/helm/aps-test-overrides-${{ matrix.edition }}.yaml

      - name: Wait for pods to be ready
        uses: Alfresco/alfresco-build-tools/.github/actions/kubectl-wait@v8.22.1

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          repository: Alfresco/alfresco-deployment-test-automation-scripts
          path: dtas
          token: ${{ secrets.BOT_GITHUB_TOKEN }}
          ref: v1.5.5

      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38  # v5.4.0
        with:
          python-version: 3.9

      - name: run DTAS minimal tests
        working-directory: dtas
        run: |
          pip install -r requirements.txt
          pytest ./tests/ -k test_process \
          --verbose --configuration=../aps-deployment/dtas.json

      - name: Collect logs from all containers
        if: always() && steps.helm_install.outcome != 'skipped'
        run: |
          mkdir -p logs
          for pod in $(kubectl get pods -n default -o jsonpath='{.items[*].metadata.name}'); do
            kubectl logs $pod -n default > logs/${pod}.log
          done

      - name: Upload logs as artifact
        if: always() && steps.helm_install.outcome != 'skipped'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 #v4.6.2
        with:
          name: k8s-aps-logs-${{ matrix.arch }}-${{ matrix.edition }}
          path: logs
